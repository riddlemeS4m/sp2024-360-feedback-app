@using Capstone_360s.Interfaces
@using Capstone_360s.Services.Identity
@using Microsoft.AspNetCore.Authorization

@model IEnumerable<Capstone_360s.Models.FeedbackDb.Timeframe>
@inject IFeedbackDbServiceFactory feedbackDbServiceFactory
@inject IAuthorizationService authorizationService

@{
    ViewData["Title"] = "Timeframes";

    var organizationId = (string)ViewContext.RouteData.Values["organizationId"];
    var organization = await feedbackDbServiceFactory.OrganizationService.GetByIdAsync(Guid.Parse(organizationId));
    var isAuthorized = await authorizationService.AuthorizeAsync(User, RoleManagerService.ProgramManagerOnlyPolicy);
    var isInstructor = await authorizationService.AuthorizeAsync(User, RoleManagerService.InstructorOnlyPolicy);
}

<br />
<h2>Welcome to <a class="select-link-primary" asp-controller="Home" asp-action="LandingPage">@organization.Name!</a></h2>
@* <div>
    <i class="bi bi-info-circle" data-bs-toggle="tooltip" title="Select the time period that you participated in this project or submitted feedback for."> Select a timeframe.</i>
    <br /><br />
</div> *@

@if(Model.Any())
{
    <div id="center-everything">
        <div class="row">
            <div class="col-md-9">
                <table class="table">
                    <thead>
                        <tr>
                            @if(isInstructor.Succeeded)
                            {
                                <th>
                                    @Html.DisplayNameFor(model => model.Id)
                                </th>
                            }
                            
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StartDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EndDate)
                            </th>
                            @if(isAuthorized.Succeeded)
                            {
                                <th>
                                    @Html.DisplayNameFor(model => model.GDFolderId)
                                </th>
                                <th></th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            @if(!item.IsArchived)
                            {
                                <tr onclick="navigateToSelect('@Url.Action("ProjectsIndex", new { organizationId = organizationId, timeframeId = item.Id })')">
                                    @if(isInstructor.Succeeded)
                                    {
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Id)
                                        </td>
                                    }
                                    <td>
                                        <a class="select-link-primary" asp-action="ProjectsIndex" asp-route-organizationId="@organizationId" asp-route-timeframeId="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.StartDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EndDate)
                                    </td>
                                    @if(isAuthorized.Succeeded)
                                    {
                                        <td>
                                            <a class="select-link-primary" target="_blank" href="https://drive.google.com/drive/folders/@item.GDFolderId">View on Google Drive</a>
                                        </td>
                                        <td>
                                            <a class="select-link-primary" asp-action="TimeframeEdit" asp-route-organizationId="@organizationId" asp-route-timeframeId="@item.Id">Edit</a>
                                        </td>
                                    }
                                </tr>
                            } 
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <p>
        We're not sure which semester you're assigned to. Please check with your instructor.
    </p>
}

@if(!isAuthorized.Succeeded)
{
    <div>
        <br>
        <div class="form-group">
            <a class="btn btn-primary" asp-controller="Home" asp-action="LandingPage">Back</a>
        </div>
    </div>
}
else
{
<div class="form-group">
        <br>
        <p>
            Don't see the semester you're looking for?
        </p>
        <p>
            <a class="btn btn-primary" asp-action="TimeframeCreate" asp-route-organizationId="@organizationId">Create a New Semester</a> | 
            <a class="select-link-primary" asp-controller="Home" asp-action="LandingPage">Back</a>
        </p>
    </div>
}

@section Scripts {

    <script>
        function navigateToSelect(url) {
            window.location.href = url;
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}