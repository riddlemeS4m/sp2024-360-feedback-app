@{
    ViewData["Title"] = "Upload Blackboard Roster";

    var organizationId = Context.Request.Query["organizationId"].ToString();
    var timeframeId = Context.Request.Query["timeframeId"].ToString();
}

<h1>Upload Blackboard Roster</h1>
<div>
    <i class="bi bi-info-circle" data-bs-toggle="tooltip" title="The only fields required to perform a roster upload successfully are the first three columns in a standard Blackboard roster download: 'Last Name', 'First Name', and 'Username'. Any other fields uploaded will not be read in or stored."> Download your class roster from the Blackboard Grade Center.</i>
    <br /><br />
</div>
<div class="row">
    <div class="col-md-3">
        <form asp-action="UploadBlackboardRoster" id="profile-form" method="post" enctype="multipart/form-data">
            <input type="hidden" name="organizationId" value="@organizationId" />
            <input type="hidden" name="timeframeId" value="@timeframeId" />
            <div class="form-group">
                @* <label for="roster">File Upload</label> *@
                <br />
                <input type="file"
                       accept=".csv"
                       for="roster"
                       class="form-control-file"
                       name="roster"
                       maxlength="2097152"
                >
@*              <span validation-for="file" class="text-danger"></span>
                *@
            </div>
            <br />
            <div>
                <input id="update-profile-button" class="btn btn-success btn-lg" type="submit" value=Go! /> |
                <a class="select-link-primary" asp-action="ProjectsIndex" asp-route-organizationId="@organizationId" asp-route-timeframeId="@timeframeId">Back</a>
            </div>
        </form>
    </div>

    <!-- Placeholder for status -->
    <div id="upload-status" style="margin-top: 10px;"></div>
    <div id="timer" style="margin-top: 10px; font-weight: bold;"></div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @* <script>
        document.getElementById("update-profile-button").addEventListener("click", async (e) => {
            e.target.disabled = true;
            const statusDiv = document.getElementById("upload-status");
            const timerDiv = document.getElementById("timer");

            statusDiv.innerHTML = `<div class="spinner-border" role="status"></div> <span>Uploading roster...</span>`;

            let elapsedSeconds = 0;
            const timerInterval = setInterval(() => {
                elapsedSeconds++;
                const minutes = Math.floor(elapsedSeconds / 60);
                const seconds = elapsedSeconds % 60;
                timerDiv.textContent = `Time Elapsed: ${minutes}m ${seconds}s`;
            }, 1000);

            const form = document.getElementById("profile-form");
            const formData = new FormData(form);

            const organizationId = form.querySelector('input[name="organizationId"]').value;
            const timeframeId = form.querySelector('input[name="timeframeId"]').value;

            let url = `/Capstone/Capstone/UploadRoster?organizationId=${encodeURIComponent(organizationId)}&timeframeId=${encodeURIComponent(timeframeId)}`;

            try {
                let response = await fetch(url, {
                    method: "POST",
                    body: formData
                });

                if (!response.ok) {
                    let error = await response.text();
                    document.getElementById("upload-status").innerText = `Error: ${error}`;
                    clearInterval(timerInterval);
                    e.target.disabled = false;
                    return;
                }

                let result = await response.json();
                url = result.redirectUrl;

                setTimeout(() => {
                    window.location.href = result.redirectUrl;
                }, 2000);
                
            } catch (error) {
                console.error("An error occurred:", error);
                document.getElementById("upload-status").innerText = "An error occurred. Please try again.";
                clearInterval(timerInterval);
                e.target.disabled = false;
            }
        });
    </script> *@
}