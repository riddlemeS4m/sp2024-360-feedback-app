@using Capstone_360s.Interfaces
@using Capstone_360s.Models.FeedbackDb
@using Capstone_360s.Services.Identity
@using Microsoft.AspNetCore.Authorization

@model Capstone_360s.Models.VMs.ProjectRoundsIndexVM
@inject IFeedbackDbServiceFactory feedbackDbServiceFactory
@inject IAuthorizationService authorizationService

@{
    ViewData["Title"] = "Project Rounds";

    var projectId = Context.Request.Query["projectId"].ToString();
    var project = await feedbackDbServiceFactory.ProjectService.GetByIdAsync(Guid.Parse(projectId));    
    var isAdmin = await authorizationService.AuthorizeAsync(User, RoleManagerService.AdminOnlyPolicy);
    var isSponsor = await authorizationService.AuthorizeAsync(User, RoleManagerService.SponsorOnlyPolicy);
}

<br>
<h2>@project.Name Rounds</h2>
<div>
    <i class="bi bi-info-circle" data-bs-toggle="tooltip" title="Select the round that you would like to view."> Select a round.</i>
    <br /><br />
</div>

<div id="center-everything">
    <div class="col-md-8">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProjectRounds.ElementAt(0).Round.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProjectRounds.ElementAt(0).ReleaseDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProjectRounds.ElementAt(0).DueDate)
                    </th>
                    @if(isAdmin.Succeeded || isSponsor.Succeeded)
                    {
                        <th>
                            @nameof(ProjectRound.GDFolderId)
                        </th>
                    }                    
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ProjectRounds)
                {
                    <tr onclick="navigateToSelect('@Url.Action("FeedbackPdfsIndex", new { organizationId = Model.OrganizationId, projectId = item.ProjectId, timeframeId = Model.TimeframeId, roundId = item.RoundId })')">

                        <td>
                            @Html.DisplayFor(modelItem => item.Round.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReleaseDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DueDate)
                        </td>
                        @if(isAdmin.Succeeded || isSponsor.Succeeded)
                        {
                            <td>
                                <a href="https://drive.google.com/drive/folders/@item.GDFolderId">View on Google Drive</a>
                            </td> 
                        }
                        <td>
        @*                     <a asp-action="FeedbackIndex" asp-route-projectId="@item.ProjectId" asp-route-timeframeId="@Model.TimeframeId" asp-route-roundId="@item.RoundId">Select</a>
        *@                
                            <a asp-action="FeedbackPdfsIndex" asp-route-organizationId="@Model.OrganizationId" asp-route-timeframeId="@Model.TimeframeId" asp-route-projectId="@item.ProjectId" asp-route-roundId="@item.RoundId">Select</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if(!isAdmin.Succeeded)
{
    <div>
        <br>
        <div class="form-group">
            <a class="btn btn-warning" asp-controller="Home" asp-action="LandingPage">Back</a>
        </div>
    </div>
}
else
{
    <div class="form-group">
        <br>
        <p>
            Don't see the round you're looking for?
        </p>
        <p>
            <a class="btn btn-primary disabled" asp-action="RoundCreate" asp-route-projectId="@projectId">Create New Project Round</a> | 
            <a class="btn btn-warning" asp-action="ProjectsIndex" asp-route-organizationId="@Model.OrganizationId" asp-route-timeframeId="@Model.TimeframeId" asp-route-projectId="@projectId">Back</a>
        </p>
    </div>
}

@section Scripts {
    <script>
        function navigateToSelect(url) {
            window.location.href = url;
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

